Index: src/day50_Polymorphism/Animal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day50_Polymorphism;\r\n\r\npublic abstract class Animal {\r\n    public int age;\r\n    public String gender;\r\n\r\n    public void eat(){\r\n        System.out.println(\"Animal is eating\");\r\n    }\r\n    public void sleep(){\r\n        System.out.println(\"Animal is sleeping\");\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day50_Polymorphism/Animal.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day50_Polymorphism/Animal.java	(date 1593275026081)
@@ -1,14 +1,124 @@
 package day50_Polymorphism;
-
+interface Breath{
+    void breath ();
+}
 public abstract class Animal {
     public int age;
     public String gender;
-
     public void eat(){
         System.out.println("Animal is eating");
     }
     public void sleep(){
         System.out.println("Animal is sleeping");
     }
+}
+final class Cat extends Animal {//3 var, 3 methods
+    public String catName;
+    public Cat(String catName, String gender, int age){
+        this.catName=catName;
+        this.gender=gender;
+        this.age=age;
+    }
+    public void eat(){
+        System.out.println(catName+" is eating");
+    }
+    @Override
+    public void sleep(){
+        System.out.println(catName+" is sleeping");
+    }
+    public void scratch(){
+        System.out.println(catName+" is scratching");
+    }
+
+}
+final class Dog extends Animal implements Breath {//3 var, 3 methods
+    public String dogName;
+    public Dog(String dogName, String gender, int age){
+        this.dogName=dogName;
+        this.gender=gender;
+        this.age=age;
+    }
+    @Override
+    public void eat(){
+        System.out.println(dogName+" is eating");
+    }
+    @Override
+    public void sleep(){
+        System.out.println(dogName+" is sleeping");
+    }
+    //@Override
+    public void bark(){
+        System.out.println(dogName+" is barking");
+    }
+    public void bark(String volume){
+        System.out.println(dogName+" is barking low");
+    }
+    @Override
+    public void breath() {
+
+    }
+}
+class Objects{
+    public static void main(String[] args) {
+        Animal animal=new Dog("Rex","M",3);
+        animal.eat();
+        animal.sleep();
+       Breath n=new Dog("d","F",3);
+       n.breath();
+     // animal.bark();
+        Dog dog=new Dog("Rembo", "M",2);
+        dog.eat();
+        dog.sleep();
+        dog.bark();
+        dog.bark("low");
+        dog.breath();
+
+
+     // Animal animal = (Animal)dog;
+        Animal animal1 = (Animal)dog; // upcasting, done implicitly
+        Animal animal2 = new Dog("Bonny", "F", 5);
+        Dog dog2 =  (Dog)animal2;  // down casting , MUST be done manually
 
+
+
+
+
+
+
+
+
+
+    }
+
+}
+
+class Bike{
+    void run(){System.out.println("1)running");}
+}
+class Splendor extends Bike{
+    void run1(){System.out.println("2)running safely with 60km");}
+
+    public static void main(String args[]){
+        Bike b = new Splendor();//upcasting
+        ((Splendor) b).run1();
+        Splendor c=new Splendor();
+        c.run();
+    }
+}
+
+class A{
+
+}
+class B extends A {
+    public static void main(String[] args) {
+        A a;
+        B b;
+
+        a = new A(); //
+        a = new B();
+
+        b = (B) new A(); //manual casting
+        b = new B();
+
+    }
 }
Index: src/day50_Polymorphism/Dog.java
===================================================================
--- src/day50_Polymorphism/Dog.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day50_Polymorphism/Dog.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
@@ -1,23 +0,0 @@
-package day50_Polymorphism;
-
-public final class Dog extends Animal{//3 var, 3 methods
-    public String dogName;
-
-    public Dog(String dogName, String gender, int age){
-        this.dogName=dogName;
-        this.gender=gender;
-        this.age=age;
-    }
-    public void eat(){
-        System.out.println(dogName+" is eating");
-    }
-    @Override
-    public void sleep(){
-        System.out.println(dogName+" is sleeping");
-    }
-    public void     bark(){
-        System.out.println(dogName+" is barking");
-    }
-
-
-}
Index: src/day50_Polymorphism/Cat.java
===================================================================
--- src/day50_Polymorphism/Cat.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day50_Polymorphism/Cat.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
@@ -1,23 +0,0 @@
-package day50_Polymorphism;
-
-public final class Cat extends Animal{//3 var, 3 methods
-    public String catName;
-
-    public Cat(String catName, String gender, int age){
-        this.catName=catName;
-        this.gender=gender;
-        this.age=age;
-    }
-    public void eat(){
-        System.out.println(catName+" is eating");
-    }
-    @Override
-    public void sleep(){
-        System.out.println(catName+" is sleeping");
-    }
-    public void     scratch(){
-        System.out.println(catName+" is scratching");
-    }
-
-
-}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ .idea/vcs.xml	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/src" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/src/day28_DateTime" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/src/day29_Wrapper_ArrayList" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: src/OfficeHours/A.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/OfficeHours/A.java	(date 1592769897653)
+++ src/OfficeHours/A.java	(date 1592769897653)
@@ -0,0 +1,7 @@
+package OfficeHours;
+
+public class A {
+    public static void main(String[] args) {
+        System.out.println("Test");
+    }
+}
Index: src/day00_Re_Studying/Strings/replaceFirstString.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day00_Re_Studying.Strings;\r\n\r\npublic class replaceFirstString {\r\n    public static void main(String [] args){\r\n        String word=\"I used to live in Moscow, but after Moscow now I am living in Springfield\";\r\n        word=word.replaceFirst(\"Moscow\", \"Khorog\");\r\n// this function replace ONLY the first referenced word\r\n        System.out.println(word);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day00_Re_Studying/Strings/replaceFirstString.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day00_Re_Studying/Strings/replaceFirstString.java	(date 1592740563525)
@@ -2,10 +2,10 @@
 
 public class replaceFirstString {
     public static void main(String [] args){
-        String word="I used to live in Moscow, but after Moscow now I am living in Springfield";
-        word=word.replaceFirst("Moscow", "Khorog");
+      //  String word="I used to live in Moscow, but after Moscow now I am living in Springfield";
+        //word=word.replaceFirst("Moscow", "Khorog");
 // this function replace ONLY the first referenced word
-        System.out.println(word);
+        //System.out.println(word);
 
 
     }
Index: src/day00_Re_Studying/Palindrom.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day00_Re_Studying;\r\n\r\npublic class Palindrom {\r\n    public static void main(String[] args) {\r\n        System.out.println(isPalindrome(\"racecar\"));\r\n        System.out.println(isPalindrome(\"anna\"));\r\n\r\n    }\r\n\r\n    public static boolean isPalindrome (String str){\r\n\r\n    for (int i=0;i<str.length()/2;i++){\r\n       if (str.charAt(i)!=str.charAt(str.length()-1-i)){\r\n           return false;\r\n       }\r\n    }\r\n\r\n    return true;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day00_Re_Studying/Palindrom.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day00_Re_Studying/Palindrom.java	(date 1592740881036)
@@ -6,7 +6,7 @@
         System.out.println(isPalindrome("anna"));
 
     }
-
+// method fot checking palindrome
     public static boolean isPalindrome (String str){
 
     for (int i=0;i<str.length()/2;i++){
Index: src/day27_DayTime/Dates_Formatting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day27_DayTime;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class Dates_Formatting {\r\n    public static void main(String[] args) {\r\n\r\n        DateTimeFormatter dtf=DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");//2020/04/23\r\n        DateTimeFormatter dtf1=DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");//23/04/2020\r\n        DateTimeFormatter dtf2=DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");//23/Apr/2020\r\n        DateTimeFormatter dtf3=DateTimeFormatter.ofPattern(\"MMM/dd/yyyy\");//Apr/23/2020\r\n        DateTimeFormatter dtf4=DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");//23 April 2020\r\n        DateTimeFormatter dtf5=DateTimeFormatter.ofPattern(\"EEE, MMMM yyyy\");//Thu, April 2020\r\n\r\n        LocalDate date1=LocalDate.now();\r\n        System.out.println(date1.format(dtf));\r\n        System.out.println(date1.format(dtf1));\r\n        System.out.println(date1.format(dtf2));\r\n        System.out.println(date1.format(dtf3));\r\n        System.out.println(date1.format(dtf4));\r\n        System.out.println(date1.format(dtf5));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day27_DayTime/Dates_Formatting.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day27_DayTime/Dates_Formatting.java	(date 1593130692328)
@@ -12,6 +12,7 @@
         DateTimeFormatter dtf3=DateTimeFormatter.ofPattern("MMM/dd/yyyy");//Apr/23/2020
         DateTimeFormatter dtf4=DateTimeFormatter.ofPattern("dd MMMM yyyy");//23 April 2020
         DateTimeFormatter dtf5=DateTimeFormatter.ofPattern("EEE, MMMM yyyy");//Thu, April 2020
+        DateTimeFormatter dtf6=DateTimeFormatter.ofPattern("MMMM");
 
         LocalDate date1=LocalDate.now();
         System.out.println(date1.format(dtf));
@@ -20,6 +21,7 @@
         System.out.println(date1.format(dtf3));
         System.out.println(date1.format(dtf4));
         System.out.println(date1.format(dtf5));
+        System.out.println(date1.format(dtf6));
     }
 
 }
Index: src/day00_Re_Studying/Strings/StringConcatination.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day00_Re_Studying.Strings;\r\n\r\npublic class StringConcatination {\r\n    public static void main(String[] args) {\r\n        String employeeName=\"Muhtor\";\r\n        String companyName=\"CyberTek\";\r\n        System.out.println(\"Employee name is \"+employeeName );\r\n        System.out.println(\"Company name is \"+companyName);\r\n        System.out.println(employeeName+\" work at \"+companyName  );\r\n        System.out.println();\r\n        System.out.println(\"Employee name is \"+ employeeName+ \"\\n Company name is \"+companyName+ \"\\n\" +employeeName+\r\n                \" work at \"+companyName   );\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day00_Re_Studying/Strings/StringConcatination.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day00_Re_Studying/Strings/StringConcatination.java	(date 1592740425260)
@@ -2,6 +2,7 @@
 
 public class StringConcatination {
     public static void main(String[] args) {
+      /*
         String employeeName="Muhtor";
         String companyName="CyberTek";
         System.out.println("Employee name is "+employeeName );
@@ -10,5 +11,7 @@
         System.out.println();
         System.out.println("Employee name is "+ employeeName+ "\n Company name is "+companyName+ "\n" +employeeName+
                 " work at "+companyName   );
+
+       */
     }
 }
Index: src/day49_Polymorphism/Polymorphism_Intro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day49_Polymorphism;\r\n\r\n\r\n\r\ninterface Animal{\r\n\r\n}\r\nclass Dog implements Animal{\r\n\r\n}\r\nclass Cat implements Animal{\r\n\r\n}\r\n\r\npublic class Polymorphism_Intro {\r\n    public static void main(String[] args) {\r\n\r\n        //Animal dog=new Animal();\r\n        Animal obj=new Dog();\r\n        Animal obj1=new Cat();\r\n        Dog obj2=new Dog();\r\n        Cat obj3=new Cat();\r\n        Animal [] animalShow={obj,obj1,obj2,obj3};\r\n        Dog [] dogShow={obj2};\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day49_Polymorphism/Polymorphism_Intro.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day49_Polymorphism/Polymorphism_Intro.java	(date 1593266513136)
@@ -1,27 +1,43 @@
 package day49_Polymorphism;
-
-
-
 interface Animal{
+    void breathing ();
+}
+class Dog2 implements Animal{
+    public void breathing() {
 
-}
-class Dog implements Animal{
+    }
+    public void barking() {
 
+    }
 }
-class Cat implements Animal{
+class Cat2 implements Animal{
+    public void breathing() {
 
+    }
+    public void scratching() {
+
+    }
 }
 
 public class Polymorphism_Intro {
     public static void main(String[] args) {
 
         //Animal dog=new Animal();
-        Animal obj=new Dog();
-        Animal obj1=new Cat();
-        Dog obj2=new Dog();
-        Cat obj3=new Cat();
+       Animal obj=new Dog2();
+       obj.breathing();
+
+        Animal obj1=new Cat2();
+        obj1.breathing();
+        //obj1.scratching();
+        Cat2 obj3=new Cat2();
+        obj3.breathing();
+        obj3.scratching();
+
+
+        Dog2 obj2=new Dog2();
+
         Animal [] animalShow={obj,obj1,obj2,obj3};
-        Dog [] dogShow={obj2};
+        Dog2 [] dogShow={obj2};
 
 
 
Index: src/day00_Re_Studying/Strings/StringOfText.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day00_Re_Studying.Strings;\r\n\r\npublic class StringOfText {\r\n    public static void main(String[] args) {\r\n        String employeeName = \"Muhtar\";\r\n\r\n        System.out.println(employeeName);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day00_Re_Studying/Strings/StringOfText.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day00_Re_Studying/Strings/StringOfText.java	(date 1592740563447)
@@ -2,9 +2,9 @@
 
 public class StringOfText {
     public static void main(String[] args) {
-        String employeeName = "Muhtar";
+       // String employeeName = "Muhtar";
 
-        System.out.println(employeeName);
+        //System.out.println(employeeName);
     }
 
 
Index: src/day00_Re_Studying/Strings/newString.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day00_Re_Studying.Strings;\r\n\r\npublic class newString {\r\n    public static void main(String[] args) {\r\n       String word = \"java\";\r\n       String word1 = new String (\"java\");\r\n       //Account debit =new Account (\"new\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/day00_Re_Studying/Strings/newString.java	(revision 54af9c0b62e9ecdddddb2f63d071b33ae53b8da6)
+++ src/day00_Re_Studying/Strings/newString.java	(date 1592740563619)
@@ -2,8 +2,8 @@
 
 public class newString {
     public static void main(String[] args) {
-       String word = "java";
-       String word1 = new String ("java");
+    //   String word = "java";
+    //   String word1 = new String ("java");
        //Account debit =new Account ("new");
     }
 }
